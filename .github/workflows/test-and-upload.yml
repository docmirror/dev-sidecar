name: 'Test And Upload'

on:
  push:
    branches:
      - master
      - '1.x'
  pull_request:
    branches:
      - master

jobs:
  test-and-upload:
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os:
          - windows
          - ubuntu
          - macos
        node:
          - 22
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4.1.7

      - name: 'Setup Node.js "${{ matrix.node }}.x" environment'
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          registry-url: https://npm.pkg.github.com/

      - name: 'Setup pnpm'
        uses: pnpm/action-setup@v4

      - name: 'Setup Python environment (Mac) Because of electron-builder install-app-deps requires Python setup tools'
        if: matrix.os == 'macos'
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: 'Get package info'
        id: package-info
        uses: luizfelipelaviola/get-package-info@v1
        with:
          path: ./packages/mitmproxy

      - name: 'Print'
        run: |
          echo "version = ${{ steps.package-info.outputs.version }}";
          echo "github.ref_type = ${{ github.ref_type }}";
          echo "github.ref = ${{ github.ref }}";
          echo "github.ref_name = ${{ github.ref_name }}";

      - name: 'npm -v | pnpm -v | python --version'
        run: |
          echo "======================================================================";
          echo "npm -v";
          echo "--------------------";
          npm -v;

          echo "======================================================================";
          echo "pnpm -v";
          echo "--------------------";
          pnpm -v;

          echo "======================================================================";
          echo "python --version";
          echo "--------------------";
          python --version;

      - name: 'pnpm install'
        run: |
          echo "======================================================================";
          dir || ls -lah;

          echo "======================================================================";
          echo "pnpm install";
          echo "--------------------";
          pnpm install;

      - name: 'npm run electron:build'
        run: |
          echo "======================================================================";
          echo "cd packages/gui";
          echo "--------------------";
          cd packages/gui;
          dir || ls -lah;

          echo "======================================================================";
          echo "npm run electron:build";
          echo "--------------------";
          npm run electron:build;

          echo "======================================================================";
          echo "cd dist_electron";
          echo "--------------------";
          cd dist_electron;
          dir || ls -lah;

          echo "======================================================================";
          echo "cd ../../../";
          echo "--------------------";
          cd ../../../;
          dir || ls -lah;

      - name: 'Upload DevSidecar-${{ steps.package-info.outputs.version }}.exe - Windows'
        uses: actions/upload-artifact@v4.4.0
        if: ${{ matrix.os == 'windows' }}
        with:
          path: packages/gui/dist_electron/DevSidecar-${{ steps.package-info.outputs.version }}.exe
          name: 'DevSidecar-${{ steps.package-info.outputs.version }}.exe'
          if-no-files-found: error
      - name: 'Upload DevSidecar-${{ steps.package-info.outputs.version }}.deb - Ubuntu'
        uses: actions/upload-artifact@v4.4.0
        if: ${{ matrix.os == 'ubuntu' }}
        with:
          path: packages/gui/dist_electron/DevSidecar-${{ steps.package-info.outputs.version }}.deb
          name: 'DevSidecar-${{ steps.package-info.outputs.version }}.deb'
          if-no-files-found: error
      - name: 'Upload DevSidecar-${{ steps.package-info.outputs.version }}.AppImage - Ubuntu'
        uses: actions/upload-artifact@v4.4.0
        if: ${{ matrix.os == 'ubuntu' }}
        with:
          path: packages/gui/dist_electron/DevSidecar-${{ steps.package-info.outputs.version }}.AppImage
          name: 'DevSidecar-${{ steps.package-info.outputs.version }}.AppImage'
          if-no-files-found: error
      - name: 'Upload DevSidecar-${{ steps.package-info.outputs.version }}.dmg - Mac'
        uses: actions/upload-artifact@v4.4.0
        if: ${{ matrix.os == 'macos' }}
        with:
          path: packages/gui/dist_electron/DevSidecar-${{ steps.package-info.outputs.version }}.dmg
          name: 'DevSidecar-${{ steps.package-info.outputs.version }}.dmg'
          if-no-files-found: error
